package controllers

import (
	"context"
	"fmt"

	"github.com/goyourt/yogourt/services"
	"gorm.io/gorm"

	"$ProjectName$/models"
)

func VerifyCredentials(username string, password string) (models.User, error) {
	var security models.Security
	db := services.GetDB()

	err := db.Joins("User").
		Where(`"User".username = ?`, username).
		First(&security).Error

	if err != nil {
		return models.User{}, fmt.Errorf("user not found")
	}

	failures, err := services.GetPasswordFailureCount(username)
	if err != nil {
		return models.User{}, fmt.Errorf("Failed to access cache for user %s", username)
	}
	if failures >= 5 {
		return models.User{}, fmt.Errorf("too many login attempts, please try again later")
	}

	if !security.CompareHash(password) {
		services.SavePasswordFailure(username)
		return models.User{}, fmt.Errorf("invalid credentials")
	}

	return security.User, err
}

func CreateUser(user models.User, password string) (models.User, error) {
	db := services.GetDB()
	ctx := context.Background()
	security := models.Security{
		User: user,
	}
	err := security.SetHash(password)
	if err != nil {
		return models.User{}, err
	}

	err = gorm.G[models.Security](db, gorm.WithResult()).Create(ctx, &security)

	return security.User, err
}
